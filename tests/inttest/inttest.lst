       1                                ;
       2                                ; udisk interrupt test
       3                                ;
       4                                	.TITLE inttest
       5                                	.ASECT
       6                                
       7 174400                         RLCS= 174400		;RL02
       8 174402                         RLBA= 174402
       9 174404                         RLDA= 174404
      10 174406                         RLMP= 174406
      11                                
      12 177560                         TKS= 177560		;TTY KBD STATUS
      13 177562                         TKB= 177562		;TTY KBD BUFFER
      14 177564                         TPS= 177564		;TTY PRINTER STATUS REG. ADDRESS
      15 177566                         TPB= 177566		;TTY PRINTER BUFFER REG. ADDRESS
      16                                
      17 177776                         PS= 177776
      18                                
      19                                ;
      20                                ; boot sector - read in reset of code (bootstrap reads 0-777)
      21                                ;
      22 000000                         	.=0
      23                                boot:
      24 000000 012700  174400          	mov #RLCS,r0
      25 000004 012760  001000  000002  	mov #1000,2(r0)		; ba = 1000
      26 000012 012760  000002  000004  	mov #2,4(r0)		; da = 1
      27 000020 012760  170000  000006  	mov #-4096.,6(r0)	; set wc
      28 000026 012710  000014          	mov #14,(r0)		; read
      29                                
      30 000032 105710                  	tstb (r0)		; wait
      31 000034 100376                  	bpl .-2
      32                                
      33 000036 032710  100000          	bit #100000,(r0)
      34 000042 001401                  	beq ok
      35 000044 000000                  	halt
      36                                ok:
      37 000046 000137  000562          	jmp @#start
      38                                
      39                                ; tty interrupt vectors
      40 000200                         br4 = 200
      41 000240                         br5 = 240
      42                                
      43 000060                         	.=60
      44 000060 000420                  	ttin
      45 000062 000200                  	br4
      46                                
      47 000064 000440                  	ttou
      48 000066 000200                  	br4
      49                                
      50 000160                         	.=160
      51 000160 000532                  	rlint
      52 000162 000240                  	br5
      53                                
      54                                ; -------------------------------------------------------------
      55                                
      56                                ;
      57                                ; code read from disk...
      58                                ;	
      59 000400                         	.=400
      60 000400 000470                  	br	start
      61                                
      62 000100                         IENABLE = 0100
      63 000002                         DSRDY   = 02
      64 000001                         RDRENB  = 01
      65                                
      66                                ; init tty
      67                                ttinit:
      68 000402 012737  000103  177560  	mov	#IENABLE+DSRDY+RDRENB,@#TKS
      69 000410 012737  000100  177564  	mov	#IENABLE,@#TPS
      70 000416 000207                  	rts	pc
      71                                
      72                                ;
      73                                ; tty input isr
      74                                ;
      75                                ttin:
      76 000420 010146                  	mov	r1,-(sp)
      77                                
      78 000422 113701  177562          	movb	@#TKB,r1
      79 000426 052737  000001  177560  	bis	#RDRENB,@#TKS
      80                                
      81 000434 012601                  	mov	(sp)+,r1
      82 000436 000006                  	rtt
      83                                
      84                                ;
      85                                ; tty output isr
      86                                ;
      87                                ttou:
      88 000440 010046                  	mov	r0,-(sp)
      89 000442 010146                  	mov	r1,-(sp)
      90 000444 010246                  	mov	r2,-(sp)
      91                                
      92 000446 105737  177564          	tstb	@#TPS		;ready?
      93                                ;	bpl	ttodone
      94 000452 001415                  	beq	ttodone
      95                                
      96 000454 016701  000524'         	mov	ttocnt,r1	;more to do?
      97 000460 001412                  	beq	ttodone
      98                                
      99 000462 016701  000526'         	mov	ttopnt,r1	
     100 000466 112102                  	movb	(r1)+,r2
     101 000470 110237  177566          	movb	r2,@#TPB
     102                                
     103 000474 010167  000526'         	mov	r1,ttopnt
     104 000500 005367  000524'         	dec	ttocnt
     105 000504 000402                  	br	ttoexit
     106                                ttodone:
     107 000506 005037  000522          	clr	@#ttobsy
     108                                ttoexit:
     109 000512 012602                  	mov	(sp)+,r2
     110 000514 012601                  	mov	(sp)+,r1
     111 000516 012600                  	mov	(sp)+,r0
     112 000520 000006                  	rtt
     113                                
     114 000522 000000                  ttobsy:	0
     115 000524 000000                  ttocnt:	0
     116 000526 000000                  ttopnt:	0
     117 000530    200                  ttobuf:	.byte	200
     118                                
     119 000531    000                  	.even
     120                                ;
     121                                ; service rl02 interrupt
     122                                ;
     123                                rlint:
     124 000532 010046                  	mov	r0,-(sp)
     125 000534 010146                  	mov	r1,-(sp)
     126 000536 010246                  	mov	r2,-(sp)
     127                                
     128 000540 012700  174400          	mov	#RLCS,r0
     129 000544 012760  000000  000000  	mov	#0,0(r0)
     130                                
     131 000552 012602                  	mov	(sp)+,r2
     132 000554 012601                  	mov	(sp)+,r1
     133 000556 012600                  	mov	(sp)+,r0
     134 000560 000006                  	rtt
     135                                
     136                                ;
     137                                ; START
     138                                ;
     139                                	.even
     140                                start:
     141 000562 012706  010000          	mov	#10000,sp
     142 000566 004737  000402          	jsr	pc,@#ttinit
     143                                
     144 000572 042767  000340  177776'         bic     #340,PS
     145                                
     146 000600 004737  001100          	jsr	pc,@#type	; banner
     147 000604 000652                  	.word	shdr
     148                                
     149 000606 012705  000003          	mov	#3,r5
     150                                loop:
     151 000612 004737  001100          	jsr	pc,@#type	; separator line
     152 000616 000765                  	.word	sline
     153 000620 005305                  	dec	r5
     154 000622 001373                  	bne	loop
     155                                
     156                                done:
     157 000624 004737  001100          	jsr	pc,@#type
     158 000630 000752                  	.word	sdone
     159 000632 004737  000642          	jsr	pc,@#crlf
     160 000636 000167  000562'         	jmp start
     161                                ;	halt
     162                                
     163                                crlf:
     164 000642 004737  001100          	jsr	pc,@#type
     165 000646 000762                  	.word	scrlf
     166 000650 000207                  	rts	pc
     167                                
     168                                ; -------------------------------------------------------------
     169                                
     170                                shdr:
     171 000652    015     012          	.ascii	<15><12>
     172 000654    164     145     163  	.ascii	/test start! test start! test start! test start! test start!/
         000657    164     040     163  
         000662    164     141     162  
         000665    164     041     040  
         000670    164     145     163  
         000673    164     040     163  
         000676    164     141     162  
         000701    164     041     040  
         000704    164     145     163  
         000707    164     040     163  
         000712    164     141     162  
         000715    164     041     040  
         000720    164     145     163  
         000723    164     040     163  
         000726    164     141     162  
         000731    164     041     040  
         000734    164     145     163  
         000737    164     040     163  
         000742    164     141     162  
         000745    164     041          
     173 000747    015     012     000  	.ascii	<15><12><0>
     174                                
     175                                sdone:
     176 000752    144     157     156  	.ascii	/done./	
         000755    145     056          
     177 000757    015     012     000  	.ascii	<15><12><0>
     178                                
     179                                scrlf:
     180 000762    015     012     000  	.ascii	<15><12><0>
     181                                
     182 000765    055     055     055  sline:	.ascii  /-----------------------------------------------------------------------/
         000770    055     055     055  
         000773    055     055     055  
         000776    055     055     055  
         001001    055     055     055  
         001004    055     055     055  
         001007    055     055     055  
         001012    055     055     055  
         001015    055     055     055  
         001020    055     055     055  
         001023    055     055     055  
         001026    055     055     055  
         001031    055     055     055  
         001034    055     055     055  
         001037    055     055     055  
         001042    055     055     055  
         001045    055     055     055  
         001050    055     055     055  
         001053    055     055     055  
         001056    055     055     055  
         001061    055     055     055  
         001064    055     055     055  
         001067    055     055     055  
         001072    055     055          
     183 001074    015     012     000  	.ascii	<15><12><0>
     184                                
     185 001077    000                  	.even
     186                                ; -------------------------------------------------------------
     187                                
     188                                ;
     189                                ;copy text to buffer
     190                                ;set buffer count
     191                                ;wait for buffer count == 0
     192                                ;
     193                                
     194                                type:
     195 001100 010046                  	mov	r0,-(sp)	; save r0
     196 001102 017600  000002          	mov	@2(sp),r0	; addr of text
     197 001106 010146                  	mov	r1,-(sp)	; save r1
     198 001110 010246                  	mov	r2,-(sp)	; save r2
     199                                
     200 001112 013701  000530          	mov 	@#ttobuf,r1
     201 001116 005002                  	clr	r2
     202 001120 112021                  1$:	movb	(r0)+,(r1)+	; push char
     203 001122 001402                  	beq	2$		; done?
     204 001124 005202                  	inc	r2
     205 001126 000774                  	br	1$
     206                                2$:
     207 001130 005302                  	dec	r2
     208 001132 010237  000524          	mov	r2,@#ttocnt	; save count-1
     209 001136 013702  000530          	mov	@#ttobuf,r2
     210 001142 112201                  	movb	(r2)+,r1	; point to 2nd char
     211 001144 010237  000526          	mov	r2,@#ttopnt
     212                                
     213 001150 005237  000522          	inc	@#ttobsy
     214 001154 110137  177566          	movb	r1,@#TPB	; start output
     215                                4$:
     216 001160 004767  001232'         	jsr	pc,chkrg	; start register access
     217 001164 013702  000522          	mov	@#ttobsy,r2
     218 001170 001373                  	bne	4$		; wait till done
     219                                
     220 001172 012602                  	mov	(sp)+,r2	; restore r2
     221 001174 012601                  	mov	(sp)+,r1	; restore r1
     222 001176 012600                  	mov	(sp)+,r0	; restore r0
     223 001200 062716  000002          	add	#2,(sp)		; skip address after jsr
     224 001204 000207                  	rts	pc
     225                                
     226                                ;
     227                                typec:
     228 001206 105737  177564          	tstb	@#TPS
     229 001212 100375                  	bpl	typec	
     230 001214 116637  000002  177566  	movb	2(sp),@#TPB
     231                                ;
     232 001222 105737  177564          1$:	tstb	@#TPS
     233 001226 100375                  	bpl	1$
     234                                ;
     235 001230 000207                  	rts	pc
     236                                
     237                                
     238                                ; -------------------------------------------------------------
     239                                
     240                                ;
     241                                ; regs 
     242                                ;
     243                                chkrg:
     244 001232 010046                  	mov	r0,-(sp)	; save regs
     245 001234 010146                  	mov	r1,-(sp)
     246 001236 010246                  	mov	r2,-(sp)
     247 001240 010346                  	mov	r3,-(sp)
     248                                
     249 001242 004767  001304'         	jsr	pc,chkrw0	; check reg read/write
     250 001246 004767  001372'         	jsr	pc,chkrw1
     251 001252 004767  001430'         	jsr	pc,chkrw2
     252 001256 004767  001470'         	jsr	pc,chkrw3
     253 001262 004767  001534'         	jsr	pc,chkcs1	; check cs tstb reads in loop
     254 001266 004767  001576'         	jsr	pc,chkint1
     255                                
     256 001272 012603                  	mov	(sp)+,r3
     257 001274 012602                  	mov	(sp)+,r2
     258 001276 012601                  	mov	(sp)+,r1
     259 001300 012600                  	mov	(sp)+,r0
     260 001302 000207                  	rts pc
     261                                
     262                                ; read/write register
     263                                chkrw0:
     264 001304 012700  174404          	mov #RLDA,r0
     265 001310 012702  000000          	mov #0,r2
     266 001314 011001                  	mov (r0), r1
     267 001316 010210                  	mov r2,(r0)
     268 001320 011001                  	mov (r0), r1
     269 001322 020102                  	cmp r1,r2
     270 001324 001401                  	beq 1$
     271 001326 000000                  	halt
     272                                1$:
     273 001330 012702  177777          	mov #177777,r2
     274 001334 011001                  	mov (r0), r1
     275 001336 010210                  	mov r2,(r0)
     276 001340 011001                  	mov (r0), r1
     277 001342 020102                  	cmp r1,r2
     278 001344 001401                  	beq 2$
     279 001346 000000                  	halt
     280                                2$:
     281 001350 012702  001234          	mov #1234,r2
     282 001354 011001                  	mov (r0), r1
     283 001356 010210                  	mov r2,(r0)
     284 001360 011001                  	mov (r0), r1
     285 001362 020102                  	cmp r1,r2
     286 001364 001401                  	beq 3$
     287 001366 000000                  	halt
     288                                3$:
     289 001370 000207                  	rts pc
     290                                
     291                                ;
     292                                ; inc register (r-m-w)
     293                                ;
     294                                chkrw1:
     295 001372 012700  174404          	mov #RLDA,r0
     296 001376 012702  000001          	mov #1,r2
     297 001402 011001                  	mov (r0), r1
     298 001404 010210                  	mov r2,(r0)	;1
     299 001406 005210                  	inc (r0)	;2
     300 001410 005210                  	inc (r0)	;3
     301 001412 005210                  	inc (r0)	;4
     302 001414 011003                  	mov (r0),r3
     303 001416 022703  000004          	cmp #4,r3
     304 001422 001401                  	beq 1$
     305 001424 000000                  	halt
     306                                1$:
     307 001426 000207                  	rts pc
     308                                
     309                                ;
     310                                ; bis register (r-m-w)
     311                                ;
     312                                chkrw2:
     313 001430 012700  174404          	mov #RLDA,r0
     314 001434 011001                  	mov (r0), r1
     315 001436 005010                  	clr (r0)	;000
     316 001440 052710  000010          	bis #10,(r0)	;010
     317 001444 052710  000020          	bis #20,(r0)	;030
     318 001450 052710  000001          	bis #01,(r0)	;031
     319 001454 011003                  	mov (r0),r3
     320 001456 022703  000031          	cmp #31,r3
     321 001462 001401                  	beq 1$
     322 001464 000000                  	halt
     323                                1$:
     324 001466 000207                  	rts pc
     325                                
     326                                ;
     327                                ; bic register (r-m-w)
     328                                ;
     329                                chkrw3:
     330 001470 012700  174404          	mov #RLDA,r0
     331 001474 012702  000777          	mov #0777,r2
     332 001500 011001                  	mov (r0), r1
     333 001502 010210                  	mov r2,(r0)	;777
     334 001504 042710  000010          	bic #10,(r0)	;767
     335 001510 042710  000020          	bic #20,(r0)	;747
     336 001514 042710  000001          	bic #01,(r0)	;746
     337 001520 011003                  	mov (r0),r3
     338 001522 022703  000746          	cmp #746,r3
     339 001526 001401                  	beq 1$
     340 001530 000000                  	halt
     341                                1$:
     342 001532 000207                  	rts pc
     343                                
     344                                ;
     345                                ; do command, wait for it, w/o interrupt
     346                                ;
     347                                chkcs1:
     348 001534 012700  174400          	mov #RLCS,r0
     349 001540 012701  000006          	mov #6,r1		; seek
     350                                ;
     351 001544 012760  000000  000004  	mov #0,4(r0)		; da = 0
     352 001552 010110                  	mov r1,(r0)
     353 001554 105710                  	tstb (r0)
     354 001556 100376                  	bpl .-2
     355                                ;
     356 001560 012760  000000  000004  	mov #0,4(r0)		; again
     357 001566 010110                  	mov r1,(r0)
     358 001570 105710                  	tstb (r0)
     359 001572 100376                  	bpl .-2
     360                                ;
     361 001574 000207                  	rts pc
     362                                
     363                                ;
     364                                ; generate interrupt from rl02 controller
     365                                ;
     366                                chkint1:
     367 001576 012700  174400          	mov #RLCS,r0
     368 001602 012701  000106          	mov #106,r1		; seek + ie
     369                                ;
     370 001606 012760  000000  000004  	mov #0,4(r0)		; da = 0
     371 001614 012710  000000          	mov #0,(r0)
     372                                ;
     373 001620 010110                  	mov r1,(r0)
     374 001622 105710                  	tstb (r0)
     375 001624 100376                  	bpl .-2
     376                                ;
     377 001626 000207                  	rts pc
     377                                
