/*
 * bus.h
 * $Id: bus.h 30 2006-09-04 15:08:23Z brad $
 */

#define BUS (P_D15 | P_D14 | P_D13 | P_D12 | P_D11 | P_D10 | P_D9 | P_D8 | \
             P_D7 | P_D6 | P_D5 | P_D4 | P_D3 | P_D2 | P_D1 | P_D0)


static inline void
bus_drive(void)
{
        AT91PS_PIO pPio = AT91C_BASE_PIOA;
	/* enable bus pins */
        pPio->PIO_OER = BUS;
        pPio->PIO_OWER = BUS;
}

static inline void
bus_passive(void)
{
#if 0
        AT91PS_PIO pPio = AT91C_BASE_PIOA;
	/* disable bus pins */
        pPio->PIO_ODR = BUS;
#else
	/* disable bus pins */
	*AT91C_PIOA_ODR = BUS;
#endif
}

/******************************************************************************
* function:    int bus_read(int reg)
*
* description: read from the CPLD using the pio "bus"
*
* passed:      none
*
* returns:     none
*
******************************************************************************/

static inline volatile int
bus_read(int reg)
{
        AT91PS_PIO pPio = AT91C_BASE_PIOA;
	int data;

	/* assume bus is passive */

        /* set address */
	pPio->PIO_SODR = reg << 17;

	/* assert rd */
	pPio->PIO_SODR = P_CPLD_RD;
	data = pPio->PIO_PDSR;
	pPio->PIO_CODR = P_CPLD_RD;

	pPio->PIO_CODR = BUS | (P_A3 | P_A2 | P_A1 | P_A0);

	return data & 0xffff;
}

static inline volatile int
bus_read_long(int reg)
{
        AT91PS_PIO pPio = AT91C_BASE_PIOA;
	int data;

	/* assume bus is passive */

        /* set address */
	pPio->PIO_SODR = reg << 17;

	/* assert rd */
	pPio->PIO_SODR = P_CPLD_RD;
	pPio->PIO_SODR = P_CPLD_RD;
	pPio->PIO_SODR = P_CPLD_RD;
//	pPio->PIO_SODR = P_CPLD_RD;

	data = pPio->PIO_PDSR;

	pPio->PIO_CODR = P_CPLD_RD;
	pPio->PIO_CODR = BUS | (P_A3 | P_A2 | P_A1 | P_A0);

	return data & 0xffff;
}

/******************************************************************************
* function:    void bus_write(int reg, int data)
*
* description: write to CPLD using the pio "bus"
*
* passed:      none
*
* returns:     none
*
******************************************************************************/

static inline volatile void
bus_write(int reg, int data)
{
        AT91PS_PIO pPio = AT91C_BASE_PIOA;

	/* assume bus is passive */

//	pPio->PIO_SODR = reg << 17;

	bus_drive();
//	pPio->PIO_SODR = data & 0xffff;

	pPio->PIO_SODR = (data & 0xffff) | (reg << 17);

	pPio->PIO_SODR = P_CPLD_WR;
	pPio->PIO_SODR = P_CPLD_WR;
	pPio->PIO_SODR = P_CPLD_WR;
//pPio->PIO_SODR = P_CPLD_WR;
//pPio->PIO_SODR = P_CPLD_WR;

	pPio->PIO_CODR = P_CPLD_WR;
	pPio->PIO_CODR = P_CPLD_WR;

	bus_passive();
	pPio->PIO_CODR = BUS | (P_A3 | P_A2 | P_A1 | P_A0);
}

static inline volatile void
bus_write_long(int reg, int data)
{
        AT91PS_PIO pPio = AT91C_BASE_PIOA;

	/* assume bus is passive */
	bus_drive();

	pPio->PIO_SODR = (data & 0xffff) | (reg << 17);

	pPio->PIO_SODR = P_CPLD_WR;
	pPio->PIO_SODR = P_CPLD_WR;
	pPio->PIO_SODR = P_CPLD_WR;
	pPio->PIO_SODR = P_CPLD_WR;

	pPio->PIO_CODR = P_CPLD_WR;

	bus_passive();
	pPio->PIO_CODR = BUS | (P_A3 | P_A2 | P_A1 | P_A0);
}

static inline volatile void
bus_write2(int reg, int data, int data2)
{
        AT91PS_PIO pPio = AT91C_BASE_PIOA;

	/* assume bus is passive */
	bus_drive();

	pPio->PIO_SODR = (data & 0xffff) | (reg << 17);
	pPio->PIO_SODR = P_CPLD_WR;
asm volatile("nop");
asm volatile("nop");
//	pPio->PIO_SODR = P_CPLD_WR;
	pPio->PIO_CODR = P_CPLD_WR;

//	asm volatile("nop");
	asm volatile("nop");
	asm volatile("nop");
asm volatile("nop");
asm volatile("nop");
asm volatile("nop");
asm volatile("nop");
asm volatile("nop");
asm volatile("nop");

	pPio->PIO_CODR = BUS;
	pPio->PIO_SODR = (data2 & 0xffff) | (reg << 17);
	pPio->PIO_SODR = P_CPLD_WR;
//	pPio->PIO_SODR = P_CPLD_WR;
asm volatile("nop");
asm volatile("nop");
	pPio->PIO_CODR = P_CPLD_WR;

	bus_passive();
	pPio->PIO_CODR = BUS | (P_A3 | P_A2 | P_A1 | P_A0);
}
